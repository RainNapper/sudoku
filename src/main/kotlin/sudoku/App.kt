/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package sudoku

class SudokuSet() {
    companion object {
        val allNumbers = setOf(1, 2, 3, 4, 5, 6, 7, 8, 9)
    }

    val set: MutableSet<Int>
    init {
        this.set = HashSet()
    }

    private fun checkNum(num: Int) {
        if (num < 1 || num > 9) {
            throw IllegalStateException("Invalid number")
        }
    }

    fun addNumber(num: Int) {
        checkNum(num)

        if (set.contains(num)) {
            throw IllegalStateException("Set already has $num")
        }

        set.add(num)
    }

    fun removeNumber(num: Int) {
        checkNum(num)

        if (!set.contains(num)) {
            throw IllegalStateException("Set does not have $num")
        }

        set.remove(num)
    }

    fun remainingNumbers(): Set<Int> {
        return allNumbers.subtract(set)
    }
}

class Sudoku(initialBoard: Array<Array<Int>>) {
    val board: Array<Array<Int>>
    val cols: Array<SudokuSet>
    val rows: Array<SudokuSet>
    val boxes: Array<SudokuSet>

    init {
        board = initialBoard.copyOf()
        cols = Array<SudokuSet>(9) { SudokuSet() }
        rows = Array<SudokuSet>(9) { SudokuSet() }
        boxes = Array<SudokuSet>(9) { SudokuSet() }
    }
}

class App {
    val greeting: String
        get() {
            return "Hello world."
        }
}

fun main(args: Array<String>) {
    println(App().greeting)
}

// 1. Parser: Read an unsolved puzzle, print a solution
// 2. Internal representation: "Puzzle" class
// 3. Solver algorithm
